@import 'skin.scss'; 

// Master Styles
h1, .title {
  color: $title_color;
  font-family: Arial, Helvetica, sans-serif;
  font-size: 2.5em;
}
h2, h3 {
  color: $subtitle_color;
  font-family: Arial, Helvetica, sans-serif;
  font-weight: lighter;
}
h3 {
  text-align: center; margin-bottom: 0;
}
h4 {
  position: relative;
}
body {
  margin: 2em;
}
body, input[text], button {
  color: $dark_grey;
  font-family: Cambria, Georgia;
}
a {
  text-decoration: none;
  cursor: pointer;
  cursor: hand;
}

/*
*, *:after, *:before {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}*/

/* everywhere else */
* {
  font-family: Arial, Helvetica, sans-serif;
}

/* buttons */
button {
  font-family: Arial;
  background-color: $light_color;
  border: none;
  padding: 0.2em 0.4em;
  border-radius: 4px;
  cursor: pointer;
  cursor: hand;

  :hover {
  	background-color: $light_color_sel;
  }
  :disabled {
  	background-color: $light_color;
  	color: $dark_grey;
  	cursor: auto;
  }
}

/* Navigation link styles 
nav {
  a {
    padding: 5px 10px;
    text-decoration: none;
    margin-right: 10px;
    margin-top: 10px;
    display: inline-block;
    background-color: $light_color;
    border-radius: 4px;
    
    :visited, :link {
      color: $dark_color;
    }
    :hover {
      color: $dark_color_sel;
      background-color: $light_color_sel;
    }
    .active {
      color: $dark_color_sel;
    }
 }
}
*/
/* icons */
.icon {
  width: 48px;
  height: 48px;
  vertical-align: bottom;
}

/* items class used in lists */
.items {
  margin: 0 0 2em 0;
  list-style-type: none;
  padding: 0;
  width: 24em;

  li {
    cursor: pointer;
    position: relative;
    left: 0;
    background-color: $very_light_color;
    margin: .5em;
    padding: /*.3em 0;*/ 0;
    height: 1.6em;
    border-radius: 4px;
    border: 1px solid $dark_color;
    display: flex;
    flex-flow: row;
    
    button {
      flex:none;
      padding: 0;
      min-width: 1.5em;
      margin-left: 2px;
      visibility: hidden;
    }

    &:hover {
      color: $dark_color;
      background-color: $light_color_sel;
      left: .1em;
      & button { visibility: visible !important; }
    }
        
    .selected {
      background-color: $light_color_sel; //#CFD8DC;
      color: $light_color;
    
	  &:hover {
  		background-color: $light_color_sel; //#BBD8DC;
	  }
    }
    

  }

  .text {
    position: relative;
    text-align: left;
  }

  .badge {
    display: inline-block;
    // font-size: small;
    background-color: $dark_color;
    color: $very_light_color;
    padding: 4px; // 0.8em 0.7em 0 0.7em;
    padding-right: 4px !important;
    //line-height: 1em;
    position: relative;
    //left: 0px;
    //top: -4px;
    //height: 1.8em;
    margin-right: .8em;
    //border-radius: 4px 0 0 4px;
    flex: none !important;
  }

  span:last-of-type, input {
  	flex: auto;
  	text-align: left;
  }
  .selected-item {
 	background-color: $dark_color_sel;
    button { visibility: visible; }
  }
  
}


/* grids definition */
[class*='col-'] {
  float: left;
  padding-right: 20px;
  padding-bottom: 20px;
  flex:none;
  :last-of-type { padding-right: 0; }
}

.grid {
  margin: 0;
}
.col-1-4 {
  width: 25%;
}
.grid-pad {
  padding: 10px 0;
  display:flex;
  flex-flow: row;
  > [class*='col-']:last-of-type {
    padding-right: 20px;
    flex:auto;
  }
}
@media (max-width: 600px) {
  .module {
    font-size: 10px;
/*    max-height: 75px; */}
}
@media (max-width: 1024px) {
  .grid {
    margin: 0;
  }
  .module {
    min-width: 240px;
  }
}

/* modules */
.module {
  padding: 0.5em;
  text-align: center;
  color: $dark_color; 
 /* min-width: 480px;*/
  background-color: $light_color;
  border-radius: 4px;
  border: 2px solid $dark_color

  :hover { cursor: pointer; }
/* overrides items color in module */
  .items li { color:$dark_color; }
}

.full-height {
  height:100%;
}

.an-pull-right {
  position: absolute; 
  right: 0;
  top:0;
  visibility: hidden;
  button {
    padding: 0;
    min-width: 1.5em;
  }
}

/* nodetree */
/* should be in notebook/notebook-tree/notebook-tree.scss
   but does not work there */
.notebookTree, .tree  {
  width: 300px;
}

.tree-wrapper {
  height: 10em;

  .tree-children {
    position: relative;
  }

  .node-content-wrapper {
    display: flex;
    flex-wrap: wrap;
    text-align: left;
    align-items: baseline;
    padding: 0 0 0 2px !important;
    min-height: 1.5em;
    border-radius: 4px;
    flex-grow: 1;
    position: relative;
    color: $dark_color;
    //background-color: $very_light_color;
    margin-right: 0.2em;
  
    &:hover { 
      color: $dark_color; 
      left: .1em; 
    }

	&::before {
	  content: "";
	  position: absolute;
	  border-bottom: 1px solid lightgrey;
	  border-left: 1px solid lightgrey;
	  height: 28px;
	  top: -15px;
	  width: 20px;
	  left: -25px;
	}
  }
  
  
  .tree-children::after {
    content: "";
    position: absolute;
    border-left: 1px solid lightgrey;
    height: 100%;
    top: -11px;
    left: -15px;
  }
  
  .tree-node-leaf > .node-wrapper > .node-content-wrapper::before {
    width: 25px;
  }

  .tree-node-focused > .node-wrapper > .node-content-wrapper {
    background-color: $light_color_sel !important;   
    color: $dark_color !important;
  } 

  .tree-node-active > .node-wrapper > .node-content-wrapper {
    background-color: $dark_color_sel !important;
    border-radius: 4px;
  }

  /* show buttons if focused or active or hover */
  .tree-node-active  > .node-wrapper > .node-content-wrapper .an-pull-right,
  .tree-node-focused > .node-wrapper > .node-content-wrapper .an-pull-right,
  .node-content-wrapper:hover .an-pull-right {
    visibility: visible;
  }

  treenode:last-child > .tree-node > .tree-children::after {
    border-left: none;
  }

  .toggle-children {
    z-index: 1;
  }

}

